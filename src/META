# OASIS_START
# DO NOT EDIT (digest: 74c1f1d841939bc17493c7d400c39e52)
version = "0.2"
description = "Combinators for Conversion"
archive(byte) = "cconv.cma"
archive(byte, plugin) = "cconv.cma"
archive(native) = "cconv.cmxa"
archive(native, plugin) = "cconv.cmxs"
exists_if = "cconv.cma"
package "yojson" (
 version = "0.2"
 description = "Combinators for Conversion"
 requires = "cconv yojson"
 archive(byte) = "cconv_yojson.cma"
 archive(byte, plugin) = "cconv_yojson.cma"
 archive(native) = "cconv_yojson.cmxa"
 archive(native, plugin) = "cconv_yojson.cmxs"
 exists_if = "cconv_yojson.cma"
)

package "sexp" (
 version = "0.2"
 description = "Combinators for Conversion"
 requires = "cconv sexplib"
 archive(byte) = "cconv_sexp.cma"
 archive(byte, plugin) = "cconv_sexp.cma"
 archive(native) = "cconv_sexp.cmxa"
 archive(native, plugin) = "cconv_sexp.cmxs"
 exists_if = "cconv_sexp.cma"
)

package "psexp" (
 version = "0.2"
 description = "Combinators for Conversion"
 requires = "cconv"
 archive(byte) = "cconv_psexp.cma"
 archive(byte, plugin) = "cconv_psexp.cma"
 archive(native) = "cconv_psexp.cmxa"
 archive(native, plugin) = "cconv_psexp.cmxs"
 exists_if = "cconv_psexp.cma"
)

package "bencode" (
 version = "0.2"
 description = "Combinators for Conversion"
 requires = "cconv bencode"
 archive(byte) = "cconv_bencode.cma"
 archive(byte, plugin) = "cconv_bencode.cma"
 archive(native) = "cconv_bencode.cmxa"
 archive(native, plugin) = "cconv_bencode.cmxs"
 exists_if = "cconv_bencode.cma"
)
# OASIS_STOP

package "ppx" (
  version = "0.2"
  description = "[@@deriving cconv]"
  requires(-ppx_driver) = "ppx_deriving cconv"
  ppxopt(-ppx_driver) = "ppx_deriving,./ppx_deriving_cconv.cma"
  requires(ppx_driver) = "ppx_deriving.api"
  archive(ppx_driver, byte) = "ppx_deriving_cconv.cma"
  archive(ppx_driver, native) = "ppx_deriving_cconv.cmxa"
  exists_if = "ppx_deriving_cconv.cma"
)
