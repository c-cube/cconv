# OASIS_START
# DO NOT EDIT (digest: b0fc9c50724be56c06814d2d920c12fa)
# Ignore VCS directories, you can use the same kind of rule outside
# OASIS_START/STOP if you want to exclude directories that contains
# useless stuff for the build process
true: annot, bin_annot
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library cconv
"src/cconv.cmxs": use_cconv
# Library ppx_deriving_cconv
"ppx/ppx_deriving_cconv.cmxs": use_ppx_deriving_cconv
<ppx/*.ml{,i,y}>: package(ppx_deriving.api)
<ppx/*.ml{,i,y}>: package(ppx_tools.metaquot)
# Library cconv_sexp
"sexp/cconv_sexp.cmxs": use_cconv_sexp
<sexp/*.ml{,i,y}>: package(sexplib)
<sexp/*.ml{,i,y}>: use_cconv
# Library cconv_yojson
"yojson/cconv_yojson.cmxs": use_cconv_yojson
<yojson/*.ml{,i,y}>: package(yojson)
<yojson/*.ml{,i,y}>: use_cconv
# Library cconv_bencode
"bencode/cconv_bencode.cmxs": use_cconv_bencode
<bencode/*.ml{,i,y}>: package(bencode)
<bencode/*.ml{,i,y}>: use_cconv
# Library cconv_psexp
"psexp/cconv_psexp.cmxs": use_cconv_psexp
<psexp/*.ml{,i,y}>: use_cconv
# Executable run_example
"example/all.byte": use_cconv
<example/*.ml{,i,y}>: use_cconv
# Executable run_bench
"bench/run_bench.native": package(benchmark)
"bench/run_bench.native": package(ppx_deriving_yojson)
"bench/run_bench.native": package(yojson)
"bench/run_bench.native": use_cconv
"bench/run_bench.native": use_cconv_yojson
<bench/*.ml{,i,y}>: package(benchmark)
<bench/*.ml{,i,y}>: package(ppx_deriving_yojson)
<bench/*.ml{,i,y}>: package(yojson)
<bench/*.ml{,i,y}>: use_cconv
<bench/*.ml{,i,y}>: use_cconv_yojson
# Executable run_tests_ppx
"tests/run_tests_ppx.native": package(bencode)
"tests/run_tests_ppx.native": package(oUnit)
"tests/run_tests_ppx.native": package(ppx_deriving.api)
"tests/run_tests_ppx.native": package(ppx_deriving.std)
"tests/run_tests_ppx.native": package(ppx_tools.metaquot)
"tests/run_tests_ppx.native": package(yojson)
"tests/run_tests_ppx.native": use_cconv
"tests/run_tests_ppx.native": use_cconv_bencode
"tests/run_tests_ppx.native": use_cconv_yojson
"tests/run_tests_ppx.native": use_ppx_deriving_cconv
<tests/*.ml{,i,y}>: package(bencode)
<tests/*.ml{,i,y}>: package(oUnit)
<tests/*.ml{,i,y}>: package(ppx_deriving.api)
<tests/*.ml{,i,y}>: package(ppx_deriving.std)
<tests/*.ml{,i,y}>: package(ppx_tools.metaquot)
<tests/*.ml{,i,y}>: package(yojson)
<tests/*.ml{,i,y}>: use_cconv
<tests/*.ml{,i,y}>: use_cconv_bencode
<tests/*.ml{,i,y}>: use_cconv_yojson
<tests/*.ml{,i,y}>: use_ppx_deriving_cconv
# OASIS_STOP
true: cppo_V_OCAML
<src/**/*.ml>: warn_A, warn(-4), warn(-44)
<tests/*>: use_ppx_cconv
